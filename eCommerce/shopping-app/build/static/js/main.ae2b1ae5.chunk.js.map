{"version":3,"sources":["constant/productConstant.js","constant/cartConstant.js","constant/orderConstant.js","constant/userConstants.js","store.js","reducers/productReducer.js","reducers/cartReducer.js","reducers/userReducers.js","reducers/orderReducer.js","components/Footer.jsx","actions/userAction.js","components/Header.jsx","components/Rating.jsx","pages/List.jsx","components/shared/Loader.jsx","components/shared/Message.jsx","pages/Home.jsx","pages/ProductDetails.jsx","actions/productAction.js","actions/cartAction.js","pages/Cart.jsx","components/shared/FormContainer.jsx","pages/Login.jsx","pages/Register.jsx","pages/Profile.jsx","actions/orderAction.js","components/shared/CheckOutSteps.jsx","pages/Shipping.jsx","pages/Payment.jsx","pages/PlaceOrder.jsx","pages/OrderDetail.jsx","pages/AddProduct.jsx","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAILS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAILS","ADD_PRODUCT_REQUEST","ADD_PRODUCT_SUCCESS","ADD_PRODUCT_FAILS","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","OREDR_CREATE_REQUEST","OREDR_CREATE_SUCCESS","OREDR_CREATE_FAIL","OREDR_DETAILS_REQUEST","OREDR_DETAILS_SUCCESS","OREDR_DETAILS_FAIL","OREDR_PAY_REQUEST","OREDR_PAY_SUCCESS","OREDR_PAY_FAIL","OREDR_PAY_RESET","OREDR_LIST_MY_REQUEST","OREDR_LIST_MY_SUCCESS","OREDR_LIST_MY_FAIL","ORDER_LIST_MY_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAIL","shippingFromLocalStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","cartItemsFromStorage","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","item","existItem","find","x","product_id","map","filter","shippingAddress","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","yourProduct","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","login","email","password","dispatch","a","config","headers","axios","post","data","setItem","stringify","response","message","Header","useSelector","useDispatch","Navbar","bg","expand","variant","collapseOnSelect","to","Brand","Toggle","Collapse","id","Nav","Link","class","NavDropdown","title","name","Item","onClick","removeItem","_id","Rating","value","text","style","color","List","props","Card","Img","src","img","Body","Title","as","Text","rating","numReview","price","countInStock","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Home","useState","setProduct","useEffect","get","then","res","console","log","p","i","md","description","image","ProductDetails","match","productId","params","qty","setQty","history","useHistory","varient","Image","alt","fluid","ListGroup","Form","Control","onChange","e","target","Array","keys","Button","disabled","push","addTocart","getState","Cart","location","search","Number","split","removeFromCartHandler","removeToCart","length","ListGroupItem","rounded","reduce","acc","toFixed","FormContainer","xs","Login","setEmail","setPassword","redirect","onSubmit","preventDefault","Group","controlId","Label","placeholder","Register","setName","cnPassword","setCnPassword","msg","setMsg","register","Profile","loadingOrders","errorOrders","Authorization","token","put","userUpate","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","DeliveredAt","CheckOutSteps","step1","step2","step3","step4","active","notActive","background","fontSize","Shipping","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","Payment","setPaymentMethod","Check","label","checked","PlaceOrder","addDecimal","num","Math","round","itemsPrice","shippingPrice","taxPrice","window","reload","index","orderCreateAction","OrderDetail","orderId","sdkReady","setSdkReady","loadingPay","successPay","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","paypal","amount","onSuccess","paymentResult","payOrder","AddProduct","userId","brand","category","handleChange","formData","FormData","append","alert","catch","err","encType","accept","files","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ae2b1ae5.chunk.js","sourcesContent":["// for getting all product details\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAILS = 'PRODUCT_LIST_FAILS';\n\n// for getting single product details\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\nexport const PRODUCT_DETAILS_FAILS = 'PRODUCT_DETAILS_FAILS';\n\nexport const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST';\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS';\nexport const ADD_PRODUCT_FAILS = 'ADD_PRODUCT_FAILS';","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';","export const OREDR_CREATE_REQUEST = 'OREDR_CREATE_REQUEST';\nexport const OREDR_CREATE_SUCCESS = 'OREDR_CREATE_SUCCESS';\nexport const OREDR_CREATE_FAIL = 'OREDR_CREATE_FAIL';\n\nexport const OREDR_DETAILS_REQUEST = 'OREDR_DETAILS_REQUEST';\nexport const OREDR_DETAILS_SUCCESS = 'OREDR_DETAILS_SUCCESS';\nexport const OREDR_DETAILS_FAIL = 'OREDR_DETAILS_FAIL';\n\nexport const OREDR_PAY_REQUEST = 'OREDR_PAY_REQUEST';\nexport const OREDR_PAY_SUCCESS = 'OREDR_PAY_SUCCESS';\nexport const OREDR_PAY_FAIL = 'OREDR_PAY_FAIL';\nexport const OREDR_PAY_RESET = 'OREDR_PAY_RESET';\n\nexport const OREDR_LIST_MY_REQUEST = 'OREDR_LIST_MY_REQUEST';\nexport const OREDR_LIST_MY_SUCCESS = 'OREDR_LIST_MY_SUCCESS';\nexport const OREDR_LIST_MY_FAIL = 'OREDR_LIST_MY_FAIL';\nexport const ORDER_LIST_MY_RESET = 'OREDR_LIST_MY_RESET';","// for user login\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\n//for user register\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\n//for user details\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\n//for update profile\nexport const USER_PROFILE_UPDATE_REQUEST = \"USER_PROFILE_UPDATE_REQUEST\";\nexport const USER_PROFILE_UPDATE_SUCCESS = \"USER_PROFILE_UPDATE_SUCCESS\";\nexport const USER_PROFILE_UPDATE_FAIL = \"USER_PROFILE_UPDATE_FAIL\";\nexport const USER_PROFILE_UPDATE_RESET = \"USER_PROFILE_UPDATE_RESET\";\n\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\n// it is a middle ware\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n// importing product reducer\nimport { productListReducer, productDetailsReducer, addProduct } from './reducers/productReducer';\n//importing cartReducer\nimport { cartReducer } from './reducers/cartReducer';\nimport { orderCreateReducer, OrderDetailsReducer, orderPayReducer, orderListReducer } from './reducers/orderReducer'\nimport { userLoginReducer, userRegisterReducer, userDetailReducer, userProfileUpdateReducer } from \"./reducers/userReducers\";\n\n\nconst shippingFromLocalStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\n//const userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\n// to store data that we will get from local storage\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\n\n// in reducer we create the function for CRUD opertion to maintain the project flow\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailReducer,\n    userUpdateProfile: userProfileUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: OrderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListReducer,\n    yourProduct: addProduct\n});\n// we defined the default state value and what changes occours\n//this is our global state\nconst initialState = {\n    //cart: { cartItems: 'unigrasp' }\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingFromLocalStorage },\n    userLogin: { userInfo: userInfoFromStorage }\n};\nconst middleware = [thunk];\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n    PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAILS, ADD_PRODUCT_FAILS,\n    PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAILS,\n    ADD_PRODUCT_REQUEST, ADD_PRODUCT_SUCCESS,\n} from '../constant/productConstant'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: action.payload }\n\n        case PRODUCT_LIST_FAILS:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state;\n\n    }\n}\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n        case PRODUCT_DETAILS_FAILS:\n            return { loading: false, error: action.payload }\n        default:\n            return state;\n    }\n}\n\nexport const addProduct = (state = {}, action) => {\n    switch (action.type) {\n        case ADD_PRODUCT_REQUEST:\n            return {\n                loading: true\n            }\n        case ADD_PRODUCT_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload\n            }\n        case ADD_PRODUCT_FAILS:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state;\n\n    }\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from \"../constant/cartConstant\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            //storing the product in item from action payload\n            const item = action.payload;\n            //to check item is present or empty using find() method \n            // here product is id of product\n            const existItem = state.cartItems.find(x => x.product_id === item.product_id)\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.product_id === existItem.product_id ? item : x)\n                }\n\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                //here x.product is id of product as we declared id as product in action file\n                cartItems: state.cartItems.filter((x) => x.product_id !== action.payload)\n            }\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n        default:\n            return state;\n    }\n}","import {\n    USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT,\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL,\n    USER_PROFILE_UPDATE_REQUEST, USER_PROFILE_UPDATE_SUCCESS, USER_PROFILE_UPDATE_FAIL, USER_PROFILE_UPDATE_RESET, USER_DETAILS_RESET\n}\n    from \"../constant/userConstants\"\n\n//login reducer    \n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return {\n                loading: true\n            }\n        case USER_LOGIN_SUCCESS:\n            return {\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_LOGIN_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state;\n\n    }\n}\n\n// user register reducer\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return {\n                loading: true\n            }\n        case USER_REGISTER_SUCCESS:\n            return {\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_REGISTER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state;\n\n    }\n}\n\n//reducer for updating user profile\nexport const userDetailReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                user: action.payload\n            }\n        case USER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case USER_DETAILS_RESET:\n            return { user: {} }\n        default:\n            return state;\n    }\n\n}\n\n// update reducer we are changing the data of userInfo\nexport const userProfileUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_PROFILE_UPDATE_REQUEST:\n            return { loading: true }\n        case USER_PROFILE_UPDATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                userInfo: action.payload\n            }\n        case USER_PROFILE_UPDATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default: return state;\n    }\n}","import { OREDR_CREATE_REQUEST, OREDR_CREATE_SUCCESS, OREDR_CREATE_FAIL, OREDR_DETAILS_SUCCESS, OREDR_DETAILS_FAIL, OREDR_DETAILS_REQUEST, OREDR_PAY_REQUEST, OREDR_PAY_SUCCESS, OREDR_PAY_FAIL, OREDR_PAY_RESET, OREDR_LIST_MY_REQUEST, OREDR_LIST_MY_SUCCESS, OREDR_LIST_MY_FAIL, ORDER_LIST_MY_RESET } from '../constant/orderConstant';\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case OREDR_CREATE_REQUEST:\n            return { loading: true }\n        case OREDR_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n        case OREDR_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default: return state;\n    }\n\n}\n\nexport const OrderDetailsReducer = (state = { orderItems: [], loading: true, shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case OREDR_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case OREDR_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n        case OREDR_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default: return state;\n    }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case OREDR_PAY_REQUEST:\n            return {\n\n                loading: true\n            }\n        case OREDR_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n        case OREDR_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case OREDR_PAY_RESET:\n            return {}\n\n        default: return state;\n    }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case OREDR_LIST_MY_REQUEST:\n            return {\n\n                loading: true\n            }\n        case OREDR_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n        case OREDR_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case ORDER_LIST_MY_RESET:\n            return { orders: [] };\n\n\n        default: return state;\n    }\n}","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst Footer = () => {\n    return (\n        <>\n            <footer>\n                <Container>\n                    <Row>\n                        <Col className=\"text-center\">\n                            <span>\n                                Copyright &copy; Unigrasp\n                        </span>\n                        </Col>\n                    </Row>\n                </Container>\n            </footer>\n        </>\n    )\n}\n\nexport default Footer;","import {\n    USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT,\n    USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL, USER_DETAILS_SUCCESS, USER_DETAILS_REQUEST,\n    USER_DETAILS_FAIL, USER_PROFILE_UPDATE_REQUEST, USER_PROFILE_UPDATE_SUCCESS,\n    USER_PROFILE_UPDATE_FAIL, USER_DETAILS_RESET\n} from \"../constant/userConstants\"\n\nimport axios from 'axios';\nimport { ORDER_LIST_MY_RESET } from \"../constant/orderConstant\";\n\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_LOGIN_REQUEST })\n\n        const config = { headers: { \"Content-Type\": \"application/json\" } };\n        const { data } = await axios.post('http://localhost:8080/api/users/login', { email, password }, config);\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST })\n\n        const config = { headers: { \"Content-Type\": \"application/json\" } };\n        const { data } = await axios.post('http://localhost:8080/api/users', { name, email, password }, config);\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data))\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    dispatch({\n        type: USER_LOGOUT\n    })\n    dispatch({ type: USER_DETAILS_RESET });\n    dispatch({ type: ORDER_LIST_MY_RESET });\n}\n\nexport const getUserDetail = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n        const { userLogin: { userInfo } } = getState();\n        const config = {\n            headers:\n            {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n        const { data } = await axios.get(`http://localhost:8080/api/users/${id}`, config);\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}\n\n//action for update reducer remember we want user not only id\nexport const userUpate = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_PROFILE_UPDATE_REQUEST\n        })\n\n        // we are getting the user details from userLogin -> userInfo\n        // we can get this data from localStorage using getState method\n        const { userLogin: { userInfo } } = getState();\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(\"http://localhost:8080/api/users/profile\", user, config);\n\n        dispatch({\n            type: USER_PROFILE_UPDATE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_PROFILE_UPDATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n    }\n}","import React from 'react';\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\"\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../actions/userAction\"\n\nconst Header = () => {\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const dispatch = useDispatch();\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    }\n\n    return (\n        <>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>Online Shop</Navbar.Brand>\n                    </LinkContainer>\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse className=\"collapse navbar-collapse justify-content-end\" id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            <LinkContainer to=\"/cart\">\n                                <Nav.Link>\n                                    <i class=\"fas fa-shopping-cart\"></i>\n                                    &nbsp;Cart</Nav.Link>\n                            </LinkContainer>\n                            {\n                                userInfo ? (\n                                    <>\n                                        <NavDropdown title={userInfo.name}>\n                                            <LinkContainer to='/profile'>\n                                                <NavDropdown.Item>\n                                                    Profile\n                                            </NavDropdown.Item>\n                                            </LinkContainer>\n                                            <NavDropdown.Item onClick={logoutHandler}>\n                                                Logout\n                                        </NavDropdown.Item>\n\n                                        </NavDropdown>\n                                        <LinkContainer to={`/addproduct/${userInfo._id}`}>\n                                            <Nav.Link>\n                                                <i class=\"fas fa-times\"></i>\n                                                &nbsp; Add Items</Nav.Link>\n                                        </LinkContainer>\n                                    </>\n\n                                ) : (\n                                        <LinkContainer to=\"/login\">\n                                            <Nav.Link>\n                                                <i class=\"fas fa-user\"></i>\n                                                &nbsp; Signin</Nav.Link>\n                                        </LinkContainer>\n\n                                    )\n                            }\n\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst Rating = ({ value, text }) => {\n    return (\n        <>\n            <div className=\"rating\">\n                <span style={{ color: \"yellow\" }}>\n                    <i className={\n                        value >= 1\n                            ? \"fas fa-star\"\n                            : value >= 0.5 ?\n                                \"fas fa-star-half-alt\"\n                                : \"fas fa-start\"}>\n\n                    </i>\n                </span>\n                <span style={{ color: \"yellow\" }}>\n                    <i className={\n                        value >= 2\n                            ? \"fas fa-star\"\n                            : value >= 1.5 ?\n                                \"fas fa-star-half-alt\"\n                                : \"fas fa-start\"}>\n\n                    </i>\n                </span>\n                <span style={{ color: \"yellow\" }}>\n                    <i className={\n                        value >= 3\n                            ? \"fas fa-star\"\n                            : value >= 2.5 ?\n                                \"fas fa-star-half-alt\"\n                                : \"fas fa-start\"}>\n\n                    </i>\n                </span>\n                <span style={{ color: \"yellow\" }}>\n                    <i className={\n                        value >= 4\n                            ? \"fas fa-star\"\n                            : value >= 3.5 ?\n                                \"fas fa-star-half-alt\"\n                                : \"fas fa-start\"}>\n\n                    </i>\n                </span>\n                <span style={{ color: \"yellow\" }}>\n                    <i className={\n                        value >= 5\n                            ? \"fas fa-star\"\n                            : value >= 4.5 ?\n                                \"fas fa-star-half-alt\"\n                                : \"fas fa-start\"}>\n\n                    </i>\n                </span>\n                <span>{text}</span>\n\n            </div>\n        </>\n    )\n}\n\nexport default Rating;","import React from 'react';\n//import products from '../product';\nimport { Card } from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport { Link } from \"react-router-dom\";\n\n\n\nconst List = (props) => {\n  return (\n    <>\n      <Card className=\"my-3 p-3 rounded\">\n        <Link to={`/product/${props.id}`}>\n          <Card.Img src={props.img} />\n        </Link>\n        <Card.Body>\n          <Link to={`/product/${props.id}`}>\n            <Card.Title as=\"div\">\n              <strong>{props.name}</strong>\n            </Card.Title>\n          </Link>\n          <Card.Text as=\"div\">\n            <Rating value={props.rating} text={`${props.numReview} reviews`} />\n          </Card.Text>\n          <Card.Text as=\"div\">\n            $ {props.price}\n          </Card.Text>\n          <Card.Text as=\"div\">\n            Stock:- {props.countInStock}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </>\n  )\n\n}\n\nexport default List;","import React from 'react';\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <>\n            <Spinner animation=\"border\" role=\"status\" style={{ width: \"100px\", height: \"100px\", margin: \"auto\", display: \"block\" }}>\n                <span className=\"visually-hidden\">Loading...</span>\n            </Spinner>\n        </>\n    )\n}\n\nexport default Loader;","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Message = ({ variant, children }) => {\n    return (\n        <>\n            <Alert variant={variant}>\n                {children}\n            </Alert>\n        </>\n    )\n}\n\nexport default Message;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productAction'\n//import products from '../product';\nimport { Row, Col } from \"react-bootstrap\";\nimport List from \"./List\";\nimport axios from \"axios\";\n//importing loader or spinner from component/shared/Loader.js\nimport Loader from '../components/shared/Loader';\n\n// importing Alert from component/shared/Message.jsx\nimport Message from \"../components/shared/Message\"\n\n\nconst Home = () => {\n    //const [product, setProduct] = useState([]);\n    const dispatch = useDispatch();\n\n    const productList = useSelector(state => state.productList);\n    const { loading, error } = productList;\n\n    const [products, setProduct] = useState([]);\n\n    useEffect(() => {\n        //const fetchData = async () => {\n        /*var instance = axios.create({\n            headers:\n                { 'content-type': 'application/x-www-form-urlencoded' }\n        });\n        instance.get(`http://localhost:8080/api/products`)\n            .then((res) => {\n                setProduct(res.data)\n            });*/\n        /*const { data } = await axios.get('http://localhost:8080/api/products');\n        setProduct(data);\n    }\n    fetchData();*/\n        // dispatch(listProducts());\n        function getData() {\n            axios.get('http://localhost:8080/api/products').then((res) => {\n                setProduct(res.data);\n                console.log(res.data)\n            })\n        }\n\n        getData();\n\n\n    }, [])\n\n    return (\n        <>\n            {\n                loading ? <Loader /> : error ? <Message variant=\"danger\">{error} </Message> :\n                    <Row>\n                        {\n                            products.map((p, i) => {\n                                return (\n                                    <Col md={3} key={i}>\n                                        <List\n                                            id={p._id}\n                                            name={p.name}\n                                            description={p.description}\n                                            img={p.image}\n                                            rating={p.rating}\n                                            numReview={p.numReview}\n                                            price={p.price}\n                                            countInStock={p.countInStock}\n                                        />\n                                    </Col>\n                                )\n                            })\n                        }\n                    </Row>\n            }\n\n        </>\n    )\n\n}\n\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\n//import data from \"../product\";\nimport { Row, Col, ListGroup, Button, Image, Form } from \"react-bootstrap\"\nimport Rating from \"../components/Rating\";\nimport { Link } from \"react-router-dom\";\nimport { detailsProduct } from '../actions/productAction';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from '../components/shared/Loader'\nimport Message from '../components/shared/Message'\n//import axios from \"axios\";\n//import List from \"./List\"\n\nconst ProductDetails = ({ match }) => {\n    const { params: { productId } } = match; // shortcut\n    // if match id product._id and the link clicked in browser id will be same then \n    // this page will render\n    // const product = data.find((p) => Number(p._id) === Number(match.params.productId));\n    //const [product, setProduct] = useState([]);\n\n    const [qty, setQty] = useState(1);\n\n    const dispatch = useDispatch();\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails\n\n    useEffect(() => {\n        //fetching data using useState function\n        // const fetchData = async () => {\n        //  const { data } = await axios.get(`http://localhost:8080/api/product/${productId}`);\n        //setProduct(data);\n        /* var instance = axios.create({\n             headers:\n                 { 'content-type': 'application/x-www-form-urlencoded' }\n         });\n         instance.get(`http://localhost:8080/api/product/${productId}`)\n             .then((res) => {\n                 setProduct(res.data)\n             });*/\n        // }\n        // fetchData();\n\n        //fetching data using redux\n        dispatch(detailsProduct(productId))\n\n    }, [dispatch, match])\n\n    const history = useHistory();\n\n    const addToCart = () => {\n        history.push(`/cart/${productId}?qty=${qty}`)\n    }\n\n    return (\n        <>\n            {\n                loading ? <Loader /> : error ? <Message varient=\"danger\" /> :\n                    <div>\n                        <Link className='btn btn-light my-3' to='/'>\n                            <i class=\"fas fa-arrow-left\"></i>\n                            &nbsp; Go Back\n                         </Link>\n                        <Row>\n                            <Col md={6}>\n                                <Image src={product.image} alt={product.name} fluid />\n                            </Col>\n                            <Col md={3}>\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <h2>{product.name}</h2>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Rating\n                                            value={product.rating}\n                                            text={`${product.numReview} Reviews`}\n                                        />\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        Price:₹{product.price}\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        Description: {product.description}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n\n                            <Col md={3}>\n\n                                <ListGroup variant='flush'>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Price</Col>\n                                            <Col>\n                                                <strong>₹{product.price}</strong>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Status</Col>\n                                            <Col>\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                    {\n                                        product.countInStock > 0 && (\n                                            <ListGroup.Item>\n                                                <Row>\n                                                    <Col>Qty</Col>\n                                                    <Form.Control as=\"select\" value={qty} onChange={(e) => setQty(e.target.value)}>\n                                                        {\n                                                            [...Array(product.countInStock).keys()].map((x) => (\n                                                                <option value={x + 1} key={x + 1}>{x + 1}</option>\n                                                            ))\n                                                        }\n                                                    </Form.Control>\n                                                </Row>\n                                            </ListGroup.Item>\n                                        )\n                                    }\n                                    <ListGroup.Item>\n                                        <Button className='btn-block' type='button' disabled={product.countInStock === 0} onClick={addToCart}>\n                                            Add to Cart\n                                        </Button>\n                                    </ListGroup.Item>\n                                </ListGroup>\n                            </Col>\n\n                        </Row>\n                    </div>\n            }\n        </>\n    )\n}\n\nexport default ProductDetails;","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAILS, ADD_PRODUCT_SUCCESS, ADD_PRODUCT_REQUEST, ADD_PRODUCT_FAILS } from '../constant/productConstant';\nimport { PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAILS } from '../constant/productConstant'\nimport axios from 'axios';\nexport const listProducts = () => async (dispatch) => {\n    try {\n        //getting the request from server\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n        const { data } = await axios.get('http://localhost:8080/api/products');\n        //once the request is done then store the data to payload\n        dispatch({\n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAILS,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n\n    }\n}\n\nexport const detailsProduct = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n        const { data } = await axios.get(`http://localhost:8080/api/product/${id}`);\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAILS,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n\n    }\n}\n\nexport const addYourProduct = (product) => async (dispatch) => {\n    try {\n        dispatch({ type: ADD_PRODUCT_REQUEST })\n\n        const config = { headers: { \"Content-Type\": \"application/json\" } };\n        const { data } = await axios.post('http://localhost:8080/api/addproduct', product, config);\n\n        dispatch({\n            type: ADD_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem(\"products\", JSON.stringify(data))\n\n\n    } catch (error) {\n        dispatch({\n            type: ADD_PRODUCT_FAILS,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from \"../constant/cartConstant\";\nimport axios from 'axios'\n\n//we will get two parameters from url id and qty\nexport const addTocart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`http://localhost:8080/api/product/${id}`);\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product_id: data._id,\n            name: data.name,\n            price: data.price,\n            countInStock: data.countInStock,\n            image: data.image,\n            qty\n        }\n    })\n\n    //to store data in our localStorage\n    //getState is use to fetch data from store.js file and there only you gey cart\n    // and inside cart you will find cartItems which you set at cartReducer\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\n}\n\n//we are using getState here because item is stored in localStorage\nexport const removeToCart = (id) => async (dispatch, getState) => {\n\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\n\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data\n    })\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, Form, Card, ListGroup, ListGroupItem, Button } from 'react-bootstrap';\nimport { addTocart, removeToCart } from '../actions/cartAction';\nimport { Link } from 'react-router-dom';\nimport Message from '../components/shared/Message'\n\nconst Cart = ({ match, location, history }) => {\n\n    const productId = match.params.id;\n    // ex:- ?qty=4 split will seperate ?qty and 4 ?qty is index 0 and 4 is index 1\n    // so we only need the number i.e 4\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n    console.log(qty)\n    console.log(productId)\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        //sending the data to action file\n        if (productId) {\n            dispatch(addTocart(productId, qty));\n        }\n    }, [dispatch, productId, qty])\n\n    // we use useSelector to store and then only we can use it in browser\n    const cart = useSelector(state => state.cart);\n    const { cartItems } = cart;\n    //const { item, existItem } = cart;\n\n    console.log(cartItems);\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeToCart(id));\n    }\n\n    const checkOut = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <>\n            <Row>\n                <Col md={8}>\n                    <h1>Shopping Cart</h1>\n                    {\n                        cartItems.length === 0 ? (\n                            <Message>Your cart is empty ! <Link to=\"/\">Go back</Link></Message>\n                        ) : (<ListGroup variant=\"flush\">\n                            {\n                                cartItems.map((item) => {\n                                    return (\n                                        <ListGroupItem>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\n                                                </Col>\n                                                <Col md={3}>\n                                                    <Link to={`/product/${item.product_id}`}>{item.name}</Link>\n                                                </Col>\n                                                <Col md={2}>\n                                                    ${item.price}\n                                                </Col>\n                                                <Col md={2}>\n                                                    <Form.Control as=\"select\" value={item.qty} onChange={(e) => dispatch(addTocart(item.product_id, Number(e.target.value)))}>\n                                                        {\n                                                            [...Array(item.countInStock).keys()].map((x) => (\n                                                                <option value={x + 1} key={x + 1}>{x + 1}</option>\n                                                            ))\n                                                        }\n                                                    </Form.Control>\n\n\n                                                </Col>\n                                                <Col md={2}>\n                                                    {/* button to remove item through its id*/}\n                                                    <Button type=\"button\" variant=\"light\" onClick={() => removeFromCartHandler(item.product_id)}>\n                                                        <i className=\"fa fa-trash text-danger\" aria-hidden=\"true\"></i>\n                                                    </Button>\n                                                </Col>\n                                            </Row>\n                                        </ListGroupItem>\n                                    )\n                                })\n                            }\n                        </ListGroup>)\n                    }\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup>\n                            {/* to get the total number of item selected from qty and\n                            display together*/ }\n                            <ListGroupItem>\n                                <h2>Sub-Total ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\n                                ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\n                            </ListGroupItem>\n                            {/* button for checkout*/}\n                            <Button\n                                type=\"button\"\n                                className=\"btn btn-block\"\n                                disabled={cartItems.length === 0}\n                                onClick={checkOut}\n                            >\n                                Proceed to checkout\n                            </Button>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Cart;","import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { login } from '../actions/userAction';\nimport Loader from '../components/shared/Loader';\nimport Message from '../components/shared/Message';\nimport FormContainer from '../components/shared/FormContainer'\n\nconst Login = ({ location, history }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    const dispatch = useDispatch();\n    const userLogin = useSelector((state) => state.userLogin)\n    const { loading, error, userInfo } = userLogin;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            history.push(redirect)\n        }\n\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch\n        dispatch(login(email, password))\n        console.log(dispatch(login(email, password)))\n    }\n\n    return (\n        <>\n            <FormContainer>\n                <h1>SIGN IN</h1>\n                {error && <Message variant=\"danger\">{error}</Message>}\n                {loading && <Loader />}\n\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            type=\"email\"\n                            value={email}\n                            placeholder=\"Enter your Email\"\n                            onChange={(e) => setEmail(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group><br />\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={password}\n                            placeholder=\"Enter your Password\"\n                            onChange={(e) => setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group><br />\n                    <Button type=\"submit\" variant=\"primary\">SIGNIN</Button>\n                </Form><br />\n                <Row>\n                    <Col>\n                        New customer ?\n                        <Link\n                            to={redirect ? `register?redirect=${redirect}` : '/register'}>\n                            Register\n                         </Link>\n                    </Col>\n                </Row>\n            </FormContainer>\n        </>\n    )\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { register } from '../actions/userAction';\nimport Loader from '../components/shared/Loader';\nimport Message from '../components/shared/Message';\nimport FormContainer from '../components/shared/FormContainer'\n\nconst Register = ({ location, history }) => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [cnPassword, setCnPassword] = useState('');\n    const [msg, setMsg] = useState('');\n\n\n    const redirect = location.search ? location.search.split('=')[1] : '/';\n\n    const dispatch = useDispatch();\n    const userRegister = useSelector((state) => state.userRegister)\n    const { loading, error, userInfo } = userRegister;\n\n    useEffect(() => {\n\n        if (userInfo) {\n            history.push(redirect)\n        }\n\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch\n        if (password !== cnPassword) {\n            setMsg('Password do not Match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n\n        //console.log(dispatch(login(email, password)))\n    }\n\n    return (\n        <>\n            <FormContainer>\n                <h1>Register</h1>\n                {error && <Message variant=\"danger\">{error}</Message>}\n                {msg && <Message variant=\"danger\">{msg}</Message>}\n                {loading && <Loader />}\n\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            value={name}\n                            placeholder=\"Enter your Name\"\n                            onChange={(e) => setName(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group><br />\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            type=\"email\"\n                            value={email}\n                            placeholder=\"Enter your Email\"\n                            onChange={(e) => setEmail(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group><br />\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={password}\n                            placeholder=\"Enter your Password\"\n                            onChange={(e) => setPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group><br />\n                    <Form.Group controlId=\"cnPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            value={cnPassword}\n                            placeholder=\"Re-enter your Password\"\n                            onChange={(e) => setCnPassword(e.target.value)}\n                        ></Form.Control>\n                    </Form.Group><br />\n                    <Button type=\"submit\" variant=\"primary\">Register</Button>\n                </Form><br />\n                <Row>\n                    <Col>\n                        Already have Account ! ?\n                        <Link\n                            to={redirect ? `login?redirect=${redirect}` : '/login'}>\n                            Login\n                         </Link>\n                    </Col>\n                </Row>\n            </FormContainer>\n        </>\n    )\n}\n\nexport default Register;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Row, Col, Button, Table } from 'react-bootstrap';\nimport { getUserDetail, userUpate } from '../actions/userAction';\nimport { listMyOrder } from '../actions/orderAction'\nimport Loader from '../components/shared/Loader';\nimport Message from '../components/shared/Message';\nimport { LinkContainer } from 'react-router-bootstrap'\n\n\nconst Profile = ({ history }) => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const dispatch = useDispatch();\n    const userDetails = useSelector((state) => state.userDetails)\n    const { loading, error, user } = userDetails;\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin;\n\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n    const { success } = userUpdateProfile;\n\n    const orderListMy = useSelector((state) => state.orderListMy);\n    const { loading: loadingOrders, orders, error: errorOrders } = orderListMy;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user.name) {\n                dispatch(getUserDetail('profile'));\n                dispatch(listMyOrder());\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n\n\n    }, [history, userInfo, user, dispatch])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch\n        dispatch(userUpate({ id: user._id, name, email, password }))\n\n        //console.log(dispatch(login(email, password)))\n    }\n\n    return (\n        <>\n            <Row>\n                <Col md={3}>\n                    <h1>Update Information</h1>\n                    {error && <Message variant=\"danger\">{error}</Message>}\n                    {success && <Message variant=\"success\">Profile updated</Message>}\n\n                    {loading && <Loader />}\n\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                value={name}\n                                placeholder=\"Enter your Name\"\n                                onChange={(e) => setName(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group><br />\n                        <Form.Group controlId=\"email\">\n                            <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                value={email}\n                                placeholder=\"Enter your Email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group><br />\n\n                        <Form.Group controlId=\"password\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                value={password}\n                                placeholder=\"Enter your Password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                            ></Form.Control>\n                        </Form.Group><br />\n\n                        <Button type=\"submit\" variant=\"primary\">Update</Button>\n                    </Form><br />\n                </Col>\n                <Col md={9}>\n                    <h1>My Orders</h1>\n                    {\n                        loadingOrders ? <Loader />\n                            : errorOrders ? <Message variant=\"danger\">{errorOrders}</Message>\n                                : (\n                                    <Table striped bordered hover responsive className=\"table-sm\">\n                                        <thead>\n                                            <tr>\n                                                <td>ID</td>\n                                                <td>DATE</td>\n                                                <td>TOTAL</td>\n                                                <td>PAID</td>\n                                                <td>DELIVERED</td>\n                                                <td>Order Details</td>\n                                            </tr>\n\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                orders.map((order) => {\n                                                    return (\n                                                        <>\n                                                            <tr key={order._id}>\n                                                                <td>{order._id}</td>\n                                                                <td>{order.createdAt.substring(0, 10)}</td>\n                                                                <td>{order.totalPrice}</td>\n                                                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                                                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                                                                )}</td>\n                                                                <td>{order.isDelivered ? order.DeliveredAt.substring(0, 10) : (\n                                                                    <i className=\"fas fa-times\" style={{ color: 'red' }}></i>\n                                                                )}</td>\n                                                                <td>\n                                                                    <LinkContainer to={`/order/${order._id}`}>\n                                                                        <Button variant=\"light\">Details</Button>\n                                                                    </LinkContainer>\n                                                                </td>\n                                                            </tr>\n                                                        </>\n                                                    )\n                                                })\n                                            }\n                                        </tbody>\n                                    </Table>\n                                )\n                    }\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default Profile;","import { OREDR_CREATE_REQUEST, OREDR_CREATE_SUCCESS, OREDR_CREATE_FAIL, OREDR_DETAILS_REQUEST, OREDR_DETAILS_SUCCESS, OREDR_DETAILS_FAIL, OREDR_PAY_REQUEST, OREDR_PAY_SUCCESS, OREDR_PAY_FAIL, OREDR_LIST_MY_REQUEST, OREDR_LIST_MY_SUCCESS, OREDR_LIST_MY_FAIL } from '../constant/orderConstant';\nimport axios from 'axios';\n\nexport const orderCreateAction = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: OREDR_CREATE_REQUEST\n        })\n        const { userLogin: { userInfo } } = getState();\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.post('http://localhost:8080/api/order', order, config);\n        dispatch({\n            type: OREDR_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: OREDR_CREATE_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: OREDR_DETAILS_REQUEST\n        })\n        const { userLogin: { userInfo } } = getState();\n        const config = {\n            headers: {\n                //'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`http://localhost:8080/api/order/${id}`, config);\n        dispatch({\n            type: OREDR_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: OREDR_DETAILS_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: OREDR_PAY_REQUEST\n        })\n        const { userLogin: { userInfo } } = getState();\n        const config = {\n            headers: {\n                //'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.put(`http://localhost:8080/api/order/${orderId}/pay`, paymentResult, config);\n        dispatch({\n            type: OREDR_PAY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: OREDR_PAY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}\n\nexport const listMyOrder = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: OREDR_LIST_MY_REQUEST\n        })\n        const { userLogin: { userInfo } } = getState();\n        const config = {\n            headers: {\n                //'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        };\n\n        const { data } = await axios.get(`http://localhost:8080/api/order/myorders`, config);\n        dispatch({\n            type: OREDR_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: OREDR_LIST_MY_FAIL,\n            payload: error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message\n        })\n\n    }\n}","// adding breadcrum\nimport React from 'react';\nimport { Nav } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckOutSteps = ({ step1, step2, step3, step4 }) => {\n    const design = {\n        background: \"yellow\",\n        fontSize: '20px',\n\n    }\n\n    const active = {\n        color: \"#1dad14\"\n    }\n\n    const notActive = {\n        background: \"white\",\n        color: \"black\",\n    }\n    return (\n        <>\n            <Nav className=\"justify-content-center mb-4\" style={design}>\n                <Nav.Item>\n                    {step1 ? (\n                        <LinkContainer to=\"/login\">\n                            <Nav.Link><span style={active}>SignIn</span></Nav.Link>\n                        </LinkContainer>\n                    ) : (<Nav.Link disabled style={notActive}>SignIn</Nav.Link>)}\n                </Nav.Item>\n\n                <Nav.Item>\n                    {step2 ? (\n                        <LinkContainer to=\"/shipping\">\n                            <Nav.Link style={active}>Shipping</Nav.Link>\n                        </LinkContainer>\n                    ) : (<Nav.Link disabled style={notActive}>Shipping</Nav.Link>)}\n                </Nav.Item>\n\n                <Nav.Item>\n                    {step3 ? (\n                        <LinkContainer to=\"/payment\">\n                            <Nav.Link style={active}>Payment</Nav.Link>\n                        </LinkContainer>\n                    ) : (<Nav.Link disabled style={notActive}>Payment</Nav.Link>)}\n                </Nav.Item>\n\n                <Nav.Item>\n                    {step4 ? (\n                        <LinkContainer to=\"/placeorder\">\n                            <Nav.Link style={active}>Place Order</Nav.Link>\n                        </LinkContainer>\n                    ) : (<Nav.Link disabled style={notActive}>Place Order</Nav.Link>)}\n                </Nav.Item>\n            </Nav>\n        </>\n    )\n}\n\nexport default CheckOutSteps;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Button } from 'react-bootstrap';\nimport { saveShippingAddress } from '../actions/cartAction';\nimport FormContainer from '../components/shared/FormContainer';\nimport CheckOutStep from '../components/shared/CheckOutSteps'\n\nconst Shipping = ({ history }) => {\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector((state) => state.cart);\n    const { shippingAddress } = cart;\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { loading, error, userInfo } = userLogin;\n\n    const [address, setAddress] = useState(shippingAddress.address);\n    const [city, setCity] = useState(shippingAddress.city);\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [country, setCountry] = useState(shippingAddress.country);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (!userLogin) {\n            history.push('/login')\n        } else {\n            dispatch(saveShippingAddress({ address, city, postalCode, country }));\n            history.push('/payment');\n            console.log('shipping Address')\n        }\n\n\n    }\n\n    return (\n        <>\n            <CheckOutStep step1 step2 />\n\n            <FormContainer>\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId=\"address\">\n                        <Form.Label>Address</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Address\"\n                            value={address}\n                            onChange={e => setAddress(e.target.value)}\n                            required\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"city\">\n                        <Form.Label>City</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter City\"\n                            value={city}\n                            onChange={e => setCity(e.target.value)}\n                            required\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"postalCode\">\n                        <Form.Label>Postal Code</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Postal Code\"\n                            value={postalCode}\n                            onChange={e => setPostalCode(e.target.value)}\n                            required\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"country\">\n                        <Form.Label>Country</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter country\"\n                            value={country}\n                            onChange={e => setCountry(e.target.value)}\n                            required\n                        >\n                        </Form.Control>\n                    </Form.Group>\n\n                    <Button type=\"submit\" variant=\"primary\">Continue</Button>\n                </Form>\n            </FormContainer>\n        </>\n    )\n}\n\nexport default Shipping;","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { savePaymentMethod } from '../actions/cartAction';\nimport CheckOutStep from '../components/shared/CheckOutSteps'\n\nconst Payment = ({ history }) => {\n    const cart = useSelector((state) => state.cart);\n    const { shippingAddress } = cart;\n\n    if (!shippingAddress) {\n        history.push('/shipping')\n    }\n    const dispatch = useDispatch()\n    const [paymentMethod, setPaymentMethod] = useState('paypal');\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(savePaymentMethod(paymentMethod));\n        history.push('/placeorder');\n\n    }\n\n    return (\n        <>\n            <CheckOutStep step1 step2 step3 />\n            <Form onSubmit={submitHandler}>\n                <h1>Payment Method</h1>\n                <Form.Group>\n                    <Form.Label as=\"legend\">\n                        Select Payment Method\n                    </Form.Label>\n                    <Col>\n                        <Form.Check\n                            type=\"radio\"\n                            id=\"paypal\"\n                            label=\"paypal or credit card\"\n                            name=\"paymentMethod\"\n                            value='paypal' checked\n                            onChange={e => setPaymentMethod(e.target.value)}\n                        >\n                        </Form.Check>\n                    </Col>\n\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">Continue</Button>\n            </Form>\n        </>\n    )\n\n}\n\nexport default Payment;","import React, { useEffect } from 'react';\nimport { Button, ListGroup, Row, Col, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { orderCreateAction } from '../actions/orderAction';\nimport { Link } from 'react-router-dom';\nimport Message from '../components/shared/Message';\nimport CheckOutStep from '../components/shared/CheckOutSteps'\n\nconst PlaceOrder = ({ history }) => {\n    const cart = useSelector(state => state.cart);\n    // const { cartItems, shippingAddress } = cart;\n\n    const dispatch = useDispatch()\n\n    const orderCreate = useSelector(state => state.orderCreate);\n    const { order, loading, success, error } = orderCreate;\n\n    const addDecimal = (num) => {\n        return Math.round(num * 100 / 100).toFixed(2);\n    }\n\n    cart.itemsPrice = addDecimal(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n    cart.shippingPrice = addDecimal(cart.cartItems > 500 ? 0 : 50);\n    cart.taxPrice = addDecimal(Number(0.15 * cart.itemsPrice).toFixed(2))\n    cart.totalPrice = Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\n    console.log(cart.totalPrice);\n    const placeOrder = () => {\n        dispatch(orderCreateAction({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n\n\n        }))\n\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`);\n            window.location.reload(false);\n        }\n        //eslint-disable-next-line\n\n    }, [history, success])\n\n    return (\n        <>\n            <CheckOutStep step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n\n                            <p>\n                                <strong>Address: </strong>\n                                {cart.shippingAddress.address}\n                                {cart.shippingAddress.city}\n                                {cart.shippingAddress.postalCode}\n                                {cart.shippingAddress.country}\n                            </p>\n\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong> {cart.paymentMethod} </strong>\n                            </p>\n\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {\n                                cart.cartItems === 0 ? (<Message variant=\"danger\">Your cart is empty</Message>) : (\n                                    <ListGroup variant=\"flush\">\n                                        {\n                                            cart.cartItems.map((item, index) => (\n                                                <ListGroup.Item key={index}>\n                                                    <Row>\n                                                        <Col md={1}>\n                                                            <Image src={item.image} alt={item.name} fluid />\n                                                        </Col>\n                                                        <Col>\n                                                            <Link to={`/product/${item.product_id}`}>{item.name}</Link>\n                                                        </Col>\n                                                        <Col md={4}>\n                                                            {item.qty + \" x \" + \" $\" + item.price} =  ${(item.qty * item.price).toFixed(2)}\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            ))\n                                        }\n                                    </ListGroup>\n                                )\n                            }\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>{cart.itemsPrice}</Col>\n                                </Row>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>{cart.shippingPrice}</Col>\n                                </Row>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>{cart.taxPrice}</Col>\n                                </Row>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>{cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant=\"danger\">{error}</Message>}\n                            </ListGroup.Item>\n                            <Button type=\"button\"\n                                className=\"btn-block\"\n                                disabled={cart.cartItems === 0}\n                                onClick={placeOrder}\n                            >Continue</Button>\n                        </ListGroup>\n                    </Card>\n                </Col>\n\n            </Row>\n        </>\n    )\n\n}\n\nexport default PlaceOrder;","import React, { useState, useEffect } from 'react';\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { ListGroup, Row, Col, Image, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { OREDR_PAY_RESET } from '../constant/orderConstant'\nimport { getOrderDetails, payOrder } from '../actions/orderAction';\nimport { Link } from 'react-router-dom';\nimport Message from '../components/shared/Message';\nimport Loader from '../components/shared/Loader';\nimport axios from 'axios';\n\nconst OrderDetail = ({ match }) => {\n    const orderId = match.params.id;\n\n    const [sdkReady, setSdkReady] = useState(false);\n\n    const dispatch = useDispatch();\n    const orderDetails = useSelector(state => state.orderDetails);\n    const { order, loading, error } = orderDetails;\n\n    const orderPay = useSelector(state => state.orderPay);\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    // calculate price\n    if (!loading) {\n        const addDecimal = (num) => {\n            return Math.round(num * 100 / 100).toFixed(2);\n        }\n\n        order.itemsPrice = addDecimal(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0));\n    }\n\n    const successPaymentHandler = (paymentResult) => {\n        console.log(paymentResult);\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    useEffect(() => {\n        const addPaypalScript = async () => {\n            const { data: clientId } = await axios.get('http://localhost:3000/api/config/paypal');\n            const script = document.createElement('script');\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n\n            script.onload = () => {\n                setSdkReady(true)\n            }\n\n            document.body.appendChild(script)\n        }\n\n\n        if (!order || successPay) {\n            dispatch(getOrderDetails(orderId))\n            dispatch({ type: OREDR_PAY_RESET })\n\n        } else if (!order.isPaid) {\n            if (window.paypal) {\n                addPaypalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n\n\n    }, [dispatch, orderId, order, successPay])\n\n    return loading ? <Loader />\n        : error ? <Message variant=\"danger\">{error}</Message>\n            : <>\n                <h2>Order {order._id}</h2>\n                <Row>\n                    <Col md={8}>\n                        <ListGroup.Item variant=\"flush\">\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Name: </strong>\n                                {order.user.name}\n                            </p>\n                            <p>\n                                <strong>Email: </strong>\n                                {order.user.email}\n                            </p>\n                            <p>\n                                <strong>Address: </strong>\n                                {order.shippingAddress.address}\n                                {order.shippingAddress.city}\n                                {order.shippingAddress.postalCode}\n                                {order.shippingAddress.country}\n                            </p>\n                            {\n                                order.isDelivered ? <Message variant=\"success\">{order.DeliveredAt}</Message>\n                                    : <Message variant=\"danger\">Not Delivered</Message>\n                            }\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                <strong> {order.paymentMethod} </strong>\n                            </p>\n                            {\n                                order.isPaid ? <Message variant=\"success\">Paid on {order.paidAt}</Message>\n                                    : <Message variant=\"danger\">Not paid</Message>\n                            }\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {\n                                order.orderItems === 0 ? (<Message variant=\"danger\">Your cart is empty</Message>) : (\n                                    <ListGroup variant=\"flush\">\n                                        {\n                                            order.orderItems.map((item, index) => (\n                                                <ListGroup.Item key={index}>\n                                                    <Row>\n                                                        <Col md={1}>\n                                                            <Image src={item.image} alt={item.name} fluid />\n                                                        </Col>\n                                                        <Col>\n                                                            <Link to={`/product/${item.product_id}`}>{item.name}</Link>\n                                                        </Col>\n                                                        <Col md={5}>\n                                                            {/*item.qty + \" x \" + \"$\" + item.price + \" = \" + \"$\" + order.orderItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)*/}\n                                                            {item.qty + \" x \" + \" $\" + item.price} =  ${(item.qty * item.price).toFixed(2)}\n                                                        </Col>\n                                                    </Row>\n                                                </ListGroup.Item>\n                                            ))\n                                        }\n                                    </ListGroup>\n                                )\n                            }\n                        </ListGroup.Item>\n                    </Col>\n                    <Col md={4}>\n                        <Card>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h2>Order Summary</h2>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Items</Col>\n                                        <Col>{order.itemsPrice}</Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>Shipping</Col>\n                                        <Col>{order.shippingPrice}</Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>Tax</Col>\n                                        <Col>{order.taxPrice}</Col>\n                                    </Row>\n                                    <Row>\n                                        <Col>Total</Col>\n                                        <Col>{order.totalPrice}</Col>\n                                    </Row>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    {error && <Message variant=\"danger\">{error}</Message>}\n                                </ListGroup.Item>\n\n                            </ListGroup>\n                        </Card>\n                        {!order.isPaid && (<ListGroup.Item>\n                            {loadingPay && <Loader />}\n                            {!sdkReady ? (<Loader />) : (\n                                <PayPalButton\n                                    amount={order.totalPrice}\n                                    onSuccess={successPaymentHandler}\n                                />\n                            )}\n                        </ListGroup.Item>)}\n                    </Col>\n                </Row>\n\n            </>\n}\n\nexport default OrderDetail;","import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddProduct = ({ match }) => {\n    const userId = match.params.id\n\n    console.log(userId)\n\n    const [product, setProduct] = useState({\n        user: userId,\n        name: '',\n        description: '',\n        brand: '',\n        category: '',\n        price: '',\n        countInStock: '',\n        rating: '',\n        numReview: '',\n        image: ''\n    });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('name', product.name);\n        formData.append('user', product.user);\n        formData.append('description', product.description);\n        formData.append('brand', product.brand);\n        formData.append('category', product.category);\n        formData.append('price', product.price);\n        formData.append('countInStock', product.countInStock);\n        formData.append('rating', product.rating);\n        formData.append('numReview', product.numReview);\n        formData.append('image', product.image);\n\n\n        axios.post('http://localhost:8080/api/products/', formData)\n            .then(res => {\n                console.log(res);\n                alert('successfully added')\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    const handleChange = (e) => {\n        setProduct({ ...product, [e.target.name]: e.target.value });\n    }\n\n    const handlePhoto = (e) => {\n        setProduct({ ...product, image: e.target.files[0] });\n    }\n\n    console.log(product.image)\n\n    return (\n        <>\n            <h1>Add Product</h1>\n            <form onSubmit={handleSubmit} encType='multipart/form-data'>\n\n                <input\n                    type=\"text\"\n                    placeholder=\"name\"\n                    name=\"name\"\n                    value={product.name}\n                    onChange={handleChange}\n                /><br />\n                <input\n                    type=\"text\"\n                    placeholder=\"description\"\n                    name=\"description\"\n                    value={product.description}\n                    onChange={handleChange}\n                /><br />\n                <input\n                    type=\"text\"\n                    placeholder=\"brand\"\n                    name=\"brand\"\n                    value={product.brand}\n                    onChange={handleChange}\n                /><br />\n                <input\n                    type=\"number\"\n                    placeholder=\"price\"\n                    name=\"price\"\n                    value={product.price}\n                    onChange={handleChange}\n                /><br />\n                <input\n                    type=\"text\"\n                    placeholder=\"category\"\n                    name=\"category\"\n                    value={product.category}\n                    onChange={handleChange}\n                /><br />\n                <input\n                    type=\"number\"\n                    placeholder=\"countInStock\"\n                    name=\"countInStock\"\n                    value={product.countInStock}\n                    onChange={handleChange}\n                /><br />\n                <input\n                    type=\"number\"\n                    placeholder=\"rating\"\n                    name=\"rating\"\n                    value={product.rating}\n                    onChange={handleChange}\n                /><br />\n                <input\n                    type=\"number\"\n                    placeholder=\"numReview\"\n                    name=\"numReview\"\n                    value={product.numReview}\n                    onChange={handleChange}\n                /><br />\n\n                <input\n                    type=\"file\"\n                    accept=\".png, .jpg, .jpeg\"\n                    name=\"image\"\n                    onChange={handlePhoto}\n                /><br />\n\n                <input\n                    type=\"submit\"\n                />\n            </form>\n        </>\n    )\n\n}\n\nexport default AddProduct;","import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport ProductDetails from \"./pages/ProductDetails\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Cart from \"./pages/Cart\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Profile from './pages/Profile';\nimport Shipping from './pages/Shipping';\nimport Payment from './pages/Payment';\nimport PlaceOrder from './pages/PlaceOrder';\nimport OrderDetail from './pages/OrderDetail';\nimport AddProduct from './pages/AddProduct';\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <Header />\n        <main className=\"my-1\">\n          <Container>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/shipping\" component={Shipping} />\n            <Route exact path=\"/placeorder\" component={PlaceOrder} />\n            <Route exact path=\"/payment\" component={Payment} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/products/:id\" component={AddProduct} />\n            <Route exact path=\"/cart/:id?\" component={Cart} />\n            <Route exact path=\"/order/:id\" component={OrderDetail} />\n            <Route exact path=\"/product/:productId\" component={ProductDetails}></Route>\n\n          </Container>\n\n        </main>\n        <Footer />\n\n\n      </Router>\n\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// provider help redux to link with react\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}